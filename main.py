import telebot
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from dotenv import load_dotenv
import os
from sqlalchemy.sql import exists
from database.database import session
from database.models.user import User
from database.models.room import Room
from database.models.match import Match
from database.models.film import Film
from random import randint

load_dotenv()

bot = telebot.TeleBot(os.getenv("BOT_TOKEN"), parse_mode="html")

@bot.message_handler(['start'])
def start(message):
    if not session.query(exists().where(User.user_id == message.from_user.id)).scalar():
        new_user = User(
            user_id = message.from_user.id,
            username = message.from_user.username
        )
        session.add(new_user)
        session.commit()

    bot.send_message(message.from_user.id, "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ø–æ –ø–æ–¥–±–æ—Ä—É —Ñ–∏–ª—å–º–æ–≤ –¥–ª—è –≤–∞—Å –∏ –≤–∞—à–∏—Ö –±–ª–∏–∑–∫–∏—Ö.</b>üå∏", reply_markup=InlineKeyboardMarkup().add(
        InlineKeyboardButton("üîé –ù–∞—á–∞—Ç—å –≤—ã–±–æ—Ä", callback_data="startSearch")
    ))

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "startSearch":
        bot.edit_message_text("<b>–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é –∫–æ–º–Ω–∞—Ç—É –ª–∏–±–æ –≤–æ–π—Ç–∏ –≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å –ø–æ–º–æ—â—å—é –∫–æ–¥–∞.üåü</b>", call.from_user.id, call.message.id, reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É", callback_data="createRoom"),
            InlineKeyboardButton("üîó –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è", callback_data="connectRoom")
        ))

        bot.answer_callback_query(call.id)
    if call.data == "createRoom":
        roomid = randint(10000000, 99999999)
        new_room = Room(
            key = roomid,
            user1 = call.from_user.id
        ) 

        session.add(new_room)
        session.commit()

        bot.edit_message_text(f"ID –∫–æ–º–Ω–∞—Ç—ã: {roomid}\n<b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –≤–∞—à–µ–º—É –ø–∞—Ä—Ç–Ω–µ—Ä—É, —á—Ç–æ–±—ã –æ–Ω –º–æ–≥ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è</b>", call.from_user.id, call.message.id)

        bot.answer_callback_query(call.id)

    if call.data == "connectRoom":
        bot.edit_message_text("–í–≤–µ–¥–∏—Ç–µ <b>–∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã.</b>", call.from_user.id, call.message.id)
        bot.register_next_step_handler_by_chat_id(call.from_user.id, connectRoom)

    if call.data.split("_")[0] == "likeFilm":
        try:
            match = session.query(Match).where(
                Match.room_id == call.data.split("_")[1],
                Match.film_id == call.data.split("_")[2],
            ).one()
            
            if call.data.split("_")[3] == "1" and match.user2_vote == True or (call.data.split("_")[3] == "2" and match.user1_vote == True):
                film = session.query(Film).where(
                    Film.id == call.data.split("_")[2],
                ).one()

                room = session.query(Room).where(
                    Room.id == call.data.split("_")[1],
                ).one()

                bot.send_message(room.user1, f"–£ –≤–∞—Å —Å–ª—É—á–∏–ª—Å—è <b>–º—ç—Ç—á!</b>üí´ –§–∏–ª—å–º <b><u>{film.name}</u></b>", reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –Ω–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–µ", url=f"https://www.kinopoisk.ru/film/{film.kpid}/")))                
                bot.send_message(room.user2, f"–£ –≤–∞—Å —Å–ª—É—á–∏–ª—Å—è <b>–º—ç—Ç—á!</b>üí´ –§–∏–ª—å–º <b><u>{film.name}</u></b>", reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –Ω–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–µ", url=f"https://www.kinopoisk.ru/film/{film.kpid}/")))                

            else:
                raise

        except Exception as e:
            if call.data.split("_")[3] == "1":
                new_match = Match(
                    room_id = call.data.split("_")[1],
                    film_id = call.data.split("_")[2],
                    user1_vote = True
                )
            elif call.data.split("_")[3] == "2":
                new_match = Match(
                    room_id = call.data.split("_")[1],
                    film_id = call.data.split("_")[2],
                    user2_vote = True
                )

            session.add(new_match)
            session.commit()

            try:
                film = session.query(Film).where(
                    Film.id == int(call.data.split("_")[2])+1
                ).one()
                
                bot.answer_callback_query(call.id, "üü¢ –ì–æ–ª–æ—Å —É—á—Ç–µ–Ω")
                bot.delete_message(call.from_user.id, call.message.id)

                bot.send_photo(
                    call.from_user.id, 
                    film.image,
                    f"<b>{film.name}</b>\n\n"+
                    f"<b>–ñ–∞–Ω—Ä—ã:</b> {film.genre}\n\n"+
                    f"<i>{film.description}</i>\n\n"
                    f"<b>‚≠êÔ∏è–†–µ–π—Ç–∏–Ω–≥:</b>\n"
                    f"<b>IMDB:</b> {film.rating_imdb}\n"+
                    f"<b>–ö–∏–Ω–æ–ø–æ–∏—Å–∫:</b> {film.rating_kp}\n",

                    reply_markup=InlineKeyboardMarkup().add(
                        InlineKeyboardButton("üëç", callback_data=f"likeFilm_{call.data.split('_')[1]}_{film.id}_{call.data.split('_')[3]}"),
                        InlineKeyboardButton("üëé", callback_data=f"dislikeFilm_{call.data.split('_')[1]}_{film.id}_{call.data.split('_')[3]}")
                    )
                )

            except Exception as e:
                bot.delete_message(call.from_user.id, call.message.id)
                bot.send_message(call.from_user.id, "<b>–£ –Ω–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ñ–∏–ª—å–º—ã. –ï—Å–ª–∏ –≤–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä –∑–∞–∫–æ–Ω—á–∏–ª –∏ –ø–æ–ª—É—á–∏–ª —Ç–∞–∫–æ–µ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç —É –≤–∞—Å –Ω–µ —Å–ª—É—á–∏–ª—Å—è –º—ç—Ç—á :( –í–æ–∑–º–æ–∂–Ω–æ –≤–∞–º —Å—Ç–æ–∏—Ç –Ω–µ–º–Ω–æ–≥–æ —Å–Ω–∏–∑–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É</b>")

        
    if call.data.split("_")[0] == "dislikeFilm":
        if call.data.split("_")[3] == "1":
            new_match = Match(
                room_id = call.data.split("_")[1],
                film_id = call.data.split("_")[2],
                user1_vote = False
            )
        elif call.data.split("_")[3] == "2":
            new_match = Match(
                room_id = call.data.split("_")[1],
                film_id = call.data.split("_")[2],
                user2_vote = False
            )

        session.add(new_match)
        session.commit()

        try:
            film = session.query(Film).where(
                Film.id == int(call.data.split("_")[2])+1
            ).one()
            
            bot.answer_callback_query(call.id, "üü¢ –ì–æ–ª–æ—Å —É—á—Ç–µ–Ω")
            bot.delete_message(call.from_user.id, call.message.id)

            bot.send_photo(
                call.from_user.id, 
                film.image,
                f"<b>{film.name}</b>\n\n"+
                f"<b>–ñ–∞–Ω—Ä—ã:</b> {film.genre}\n\n"+
                f"<i>{film.description}</i>\n\n"
                f"<b>‚≠êÔ∏è–†–µ–π—Ç–∏–Ω–≥:</b>\n"
                f"<b>IMDB:</b> {film.rating_imdb}\n"+
                f"<b>–ö–∏–Ω–æ–ø–æ–∏—Å–∫:</b> {film.rating_kp}\n",

                reply_markup=InlineKeyboardMarkup().add(
                    InlineKeyboardButton("üëç", callback_data=f"likeFilm_{call.data.split('_')[1]}_{film.id}_{call.data.split('_')[3]}"),
                    InlineKeyboardButton("üëé", callback_data=f"dislikeFilm_{call.data.split('_')[1]}_{film.id}_{call.data.split('_')[3]}")
                )
            )

        except Exception as e:
            bot.delete_message(call.from_user.id, call.message.id)
            bot.send_message(call.from_user.id, "<b>–£ –Ω–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ñ–∏–ª—å–º—ã. –ï—Å–ª–∏ –≤–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä –∑–∞–∫–æ–Ω—á–∏–ª –∏ –ø–æ–ª—É—á–∏–ª —Ç–∞–∫–æ–µ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç —É –≤–∞—Å –Ω–µ —Å–ª—É—á–∏–ª—Å—è –º—ç—Ç—á :( –í–æ–∑–º–æ–∂–Ω–æ –≤–∞–º —Å—Ç–æ–∏—Ç –Ω–µ–º–Ω–æ–≥–æ —Å–Ω–∏–∑–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É</b>")


def connectRoom(message):
    try:
        room = session.query(Room).where(
            Room.key == message.text
        ).one()

        room.user2 = message.from_user.id
        session.add(room)
        session.commit()

        bot.send_message(room.user1, "–í—ã–±–æ—Ä —Ñ–∏–ª—å–º–∞ –Ω–∞—á–∞—Ç!")
        bot.send_message(room.user2, "–í—ã–±–æ—Ä —Ñ–∏–ª—å–º–∞ –Ω–∞—á–∞—Ç!")

        film = session.query(Film).where(
            Film.id == 1
        ).one()

        bot.send_photo(
            message.from_user.id, 
            film.image,
            f"<b>{film.name}</b>\n\n"+
            f"<b>–ñ–∞–Ω—Ä—ã:</b> {film.genre}\n\n"+
            f"<i>{film.description}</i>\n\n"
            f"<b>‚≠êÔ∏è–†–µ–π—Ç–∏–Ω–≥:</b>\n"
            f"<b>IMDB:</b> {film.rating_imdb}\n"+
            f"<b>–ö–∏–Ω–æ–ø–æ–∏—Å–∫:</b> {film.rating_kp}\n",

            reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton("üëç", callback_data=f"likeFilm_{room.id}_{film.id}_2"),
                InlineKeyboardButton("üëé", callback_data=f"dislikeFilm_{room.id}_{film.id}_2")
            )
        )

        bot.send_photo(
            room.user1, 
            film.image,
            f"<b>{film.name}</b>\n\n"+
            f"<b>–ñ–∞–Ω—Ä—ã:</b> {film.genre}\n\n"+
            f"<i>{film.description}</i>\n\n"
            f"<b>‚≠êÔ∏è–†–µ–π—Ç–∏–Ω–≥:</b>\n"
            f"<b>IMDB:</b> {film.rating_imdb}\n"+
            f"<b>–ö–∏–Ω–æ–ø–æ–∏—Å–∫:</b> {film.rating_kp}\n",

            reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton("üëç", callback_data=f"likeFilm_{room.id}_{film.id}_1"),
                InlineKeyboardButton("üëé", callback_data=f"dislikeFilm_{room.id}_{film.id}_1")
            )
        )

    except Exception as e:
        bot.send_message(message.from_user.id, "–ö–æ–º–Ω–∞—Ç–∞ <i>–Ω–µ –Ω–∞–π–¥–µ–Ω–∞</i>.")
    

bot.polling(non_stop=True)